---
interface Props {
	title: string;
	href: string;
}

const { href, title } = Astro.props;
---

<div class="link-card">
	<a href={href}>
		<p>
			{title}

		</p>
	</a>
</div>

<style>
	


	.link-card {
		list-style: none;
		width: 100%;
		height: 100%;
		display: flex;
		padding: 1px;
		background-image: none;
		background-size: 400%;
		border-style: solid;
		border-radius: 4px;
		border-width: 1px;
		border-color: #1170ff;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);

	}
	.link-card > a {
		width: 100%;
		height: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: calc(1.5rem - 1px);
		border-radius: 4px;
		color: #1170FF;
		align-items: center;
		justify-content: center;
		text-align: center;
		display: flex;
	}
	@media only screen and (max-width: 800px) {

		.link-card {
				list-style: none;
				width: 100%;
				height: 80px;
				display: flex;
				padding: 1px;
				background-image: none;
				background-size: 400%;
				border-style: solid;
				border-radius: 4px;
				border-width: 1px;
				border-color: #1170ff;
				background-position: 100%;
				transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
				box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);

			}
			.link-card > a {
				width: 100%;
				height: 80px;
				text-decoration: none;
				line-height: 1.4;
				padding: calc(1.5rem - 1px);
				border-radius: 4px;
				color: #1170FF;
				align-items: center;
				justify-content: center;
				text-align: center;
				display: flex;
			}

	}

	p {
		margin-top: -1.5rem;
		font-size: 1rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		font-weight: 300;
	}

	.link-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: #fff;
	}
	.link-card:is(:hover, :focus-within) p {
		color: #fff;
	}

</style>
